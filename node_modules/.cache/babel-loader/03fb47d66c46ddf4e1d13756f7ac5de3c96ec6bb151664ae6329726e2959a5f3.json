{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/threat-map/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport L from 'leaflet';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    // Leaflet map initialization\n    const map = L.map('map', {\n      zoomControl: false,\n      scrollWheelZoom: false,\n      doubleClickZoom: false,\n      dragging: false,\n      maxBounds: [[-90, -180], [90, 180]],\n      maxBoundsViscosity: 1.0\n    }).setView([40, 0], 1.5);\n\n    // Create a pane for the background layer\n    map.createPane('backgroundPane');\n    map.getPane('backgroundPane').style.zIndex = 100;\n    L.rectangle([[-90, -180], [90, 180]], {\n      color: '#000000',\n      fillColor: '#000000',\n      fillOpacity: 1,\n      pane: 'backgroundPane'\n    }).addTo(map);\n    fetch('https://raw.githubusercontent.com/datasets/geo-countries/master/data/countries.geojson').then(response => response.json()).then(data => {\n      L.geoJSON(data, {\n        style: {\n          color: '#4A90E2',\n          weight: 0.5,\n          fillColor: '#000000',\n          fillOpacity: 0.5\n        },\n        onEachFeature: function (feature, layer) {\n          layer.on({\n            mouseover: function () {\n              layer.setStyle({\n                color: '#4A90E2',\n                weight: 1.5,\n                dashArray: '5, 5',\n                fillColor: '#4A90E2',\n                fillOpacity: 0.5\n              });\n            },\n            mouseout: function () {\n              layer.setStyle({\n                color: '#4A90E2',\n                weight: 0.5,\n                dashArray: '',\n                fillColor: '#000000',\n                fillOpacity: 0.5\n              });\n            }\n          });\n        }\n      }).addTo(map);\n    });\n\n    // Attack simulation\n    let attackData = []; // Add attack data here\n    let currentIndex = 0;\n    const svgLayer = d3.select(map.getPanes().overlayPane).append(\"svg\"),\n      g = svgLayer.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n    function reset() {\n      const bounds = map.getBounds(),\n        topLeft = map.latLngToLayerPoint(bounds.getNorthWest()),\n        bottomRight = map.latLngToLayerPoint(bounds.getSouthEast());\n      svgLayer.attr('width', bottomRight.x - topLeft.x).attr('height', bottomRight.y - topLeft.y).style('left', `${topLeft.x}px`).style('top', `${topLeft.y}px`);\n      g.attr('transform', `translate(${-topLeft.x}, ${-topLeft.y})`);\n      showNextAttack();\n    }\n    function showNextAttack() {\n      if (currentIndex >= attackData.length) currentIndex = 0;\n      const attack = attackData[currentIndex];\n      currentIndex++;\n      const source = projectPoint(attack.source);\n      const destination = projectPoint(attack.destination);\n      const midPoint = [(source[0] + destination[0]) / 2 + 100, (source[1] + destination[1]) / 2];\n      let lineColor;\n      switch (attack.threatType) {\n        case 'malware':\n          lineColor = 'red';\n          break;\n        case 'phishing':\n          lineColor = 'purple';\n          break;\n        case 'exploit':\n          lineColor = 'yellow';\n          break;\n        default:\n          lineColor = 'white';\n      }\n      const lineGenerator = d3.line().curve(d3.curveBundle.beta(1)).x(d => d[0]).y(d => d[1]);\n      const path = g.append(\"path\").datum([source, midPoint, destination]).attr(\"class\", \"attack-line\").attr(\"d\", lineGenerator).attr(\"stroke\", lineColor).attr(\"stroke-width\", 2).attr(\"stroke-dasharray\", function () {\n        return this.getTotalLength();\n      }).attr(\"stroke-dashoffset\", function () {\n        return this.getTotalLength();\n      }).transition().duration(1000).ease(d3.easeLinear).attr(\"stroke-dashoffset\", 0).on(\"end\", function () {\n        d3.select(this).remove();\n        showNextAttack();\n      });\n      d3.select(\"#activeAttacksList\").append(\"li\").text(`${attack.sourceName} âž” ${attack.destinationName} (${attack.threatType})`).transition().duration(1000).remove();\n    }\n    function projectPoint(latlng) {\n      const point = map.latLngToLayerPoint(new L.LatLng(latlng[0], latlng[1]));\n      return [point.x, point.y];\n    }\n    document.getElementById('updateAttacks').addEventListener('click', () => {\n      showNextAttack();\n    });\n    map.on(\"moveend\", reset);\n    reset();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"logo\",\n        src: \"polysialogo.png\",\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        id: \"logotitle\",\n        children: \"Polysia Tech\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ThreatMap Live Attack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"leftSidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Threat Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"threatList\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Number of Attacks:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"attackCount\",\n              min: \"1\",\n              max: \"30\",\n              defaultValue: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"updateAttacks\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Active Attacks:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              id: \"activeAttacksList\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","L","d3","jsxDEV","_jsxDEV","App","_s","map","zoomControl","scrollWheelZoom","doubleClickZoom","dragging","maxBounds","maxBoundsViscosity","setView","createPane","getPane","style","zIndex","rectangle","color","fillColor","fillOpacity","pane","addTo","fetch","then","response","json","data","geoJSON","weight","onEachFeature","feature","layer","on","mouseover","setStyle","dashArray","mouseout","attackData","currentIndex","svgLayer","select","getPanes","overlayPane","append","g","attr","reset","bounds","getBounds","topLeft","latLngToLayerPoint","getNorthWest","bottomRight","getSouthEast","x","y","showNextAttack","length","attack","source","projectPoint","destination","midPoint","lineColor","threatType","lineGenerator","line","curve","curveBundle","beta","d","path","datum","getTotalLength","transition","duration","ease","easeLinear","remove","text","sourceName","destinationName","latlng","point","LatLng","document","getElementById","addEventListener","className","children","id","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","defaultValue","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/threat-map/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport L from 'leaflet';\nimport * as d3 from 'd3';\n\nfunction App() {\n  useEffect(() => {\n    // Leaflet map initialization\n    const map = L.map('map', {\n      zoomControl: false,\n      scrollWheelZoom: false,\n      doubleClickZoom: false,\n      dragging: false,\n      maxBounds: [[-90, -180], [90, 180]],\n      maxBoundsViscosity: 1.0,\n    }).setView([40, 0], 1.5);\n\n    // Create a pane for the background layer\n    map.createPane('backgroundPane');\n    map.getPane('backgroundPane').style.zIndex = 100;\n\n    L.rectangle([[-90, -180], [90, 180]], {\n      color: '#000000',\n      fillColor: '#000000',\n      fillOpacity: 1,\n      pane: 'backgroundPane',\n    }).addTo(map);\n\n    fetch('https://raw.githubusercontent.com/datasets/geo-countries/master/data/countries.geojson')\n      .then((response) => response.json())\n      .then((data) => {\n        L.geoJSON(data, {\n          style: {\n            color: '#4A90E2',\n            weight: 0.5,\n            fillColor: '#000000',\n            fillOpacity: 0.5,\n          },\n          onEachFeature: function (feature, layer) {\n            layer.on({\n              mouseover: function () {\n                layer.setStyle({\n                  color: '#4A90E2',\n                  weight: 1.5,\n                  dashArray: '5, 5',\n                  fillColor: '#4A90E2',\n                  fillOpacity: 0.5,\n                });\n              },\n              mouseout: function () {\n                layer.setStyle({\n                  color: '#4A90E2',\n                  weight: 0.5,\n                  dashArray: '',\n                  fillColor: '#000000',\n                  fillOpacity: 0.5,\n                });\n              },\n            });\n          },\n        }).addTo(map);\n      });\n\n    // Attack simulation\n    let attackData = [\n      \n    ];  // Add attack data here\n    let currentIndex = 0;\n\n    const svgLayer = d3.select(map.getPanes().overlayPane).append(\"svg\"),\n      g = svgLayer.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n\n    function reset() {\n      const bounds = map.getBounds(),\n        topLeft = map.latLngToLayerPoint(bounds.getNorthWest()),\n        bottomRight = map.latLngToLayerPoint(bounds.getSouthEast());\n\n      svgLayer\n        .attr('width', bottomRight.x - topLeft.x)\n        .attr('height', bottomRight.y - topLeft.y)\n        .style('left', `${topLeft.x}px`)\n        .style('top', `${topLeft.y}px`);\n\n      g.attr('transform', `translate(${-topLeft.x}, ${-topLeft.y})`);\n\n      showNextAttack();\n    }\n\n    function showNextAttack() {\n      if (currentIndex >= attackData.length) currentIndex = 0;\n\n      const attack = attackData[currentIndex];\n      currentIndex++;\n      const source = projectPoint(attack.source);\n      const destination = projectPoint(attack.destination);\n      const midPoint = [(source[0] + destination[0]) / 2 + 100, (source[1] + destination[1]) / 2];\n\n      let lineColor;\n      switch (attack.threatType) {\n        case 'malware':\n          lineColor = 'red';\n          break;\n        case 'phishing':\n          lineColor = 'purple';\n          break;\n        case 'exploit':\n          lineColor = 'yellow';\n          break;\n        default:\n          lineColor = 'white';\n      }\n\n      const lineGenerator = d3.line()\n        .curve(d3.curveBundle.beta(1))\n        .x(d => d[0])\n        .y(d => d[1]);\n\n      const path = g.append(\"path\")\n        .datum([source, midPoint, destination])\n        .attr(\"class\", \"attack-line\")\n        .attr(\"d\", lineGenerator)\n        .attr(\"stroke\", lineColor)\n        .attr(\"stroke-width\", 2)\n        .attr(\"stroke-dasharray\", function () {\n          return this.getTotalLength();\n        })\n        .attr(\"stroke-dashoffset\", function () {\n          return this.getTotalLength();\n        })\n        .transition()\n        .duration(1000)\n        .ease(d3.easeLinear)\n        .attr(\"stroke-dashoffset\", 0)\n        .on(\"end\", function () {\n          d3.select(this).remove();\n          showNextAttack();\n        });\n\n      d3.select(\"#activeAttacksList\").append(\"li\").text(`${attack.sourceName} âž” ${attack.destinationName} (${attack.threatType})`).transition().duration(1000).remove();\n    }\n\n    function projectPoint(latlng) {\n      const point = map.latLngToLayerPoint(new L.LatLng(latlng[0], latlng[1]));\n      return [point.x, point.y];\n    }\n\n    document.getElementById('updateAttacks').addEventListener('click', () => {\n      showNextAttack();\n    });\n\n    map.on(\"moveend\", reset);\n    reset();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header id=\"header\">\n        <img id=\"logo\" src=\"polysialogo.png\" alt=\"Logo\" />\n        <h4 id=\"logotitle\">Polysia Tech</h4>\n        <h1>ThreatMap Live Attack</h1>\n      </header>\n\n      <div id=\"container\">\n        <div id=\"leftSidebar\">\n          <h2>Threat Data</h2>\n          <ul id=\"threatList\">\n            <li>\n              <b>Number of Attacks:</b>\n              <input type=\"number\" id=\"attackCount\" min=\"1\" max=\"30\" defaultValue=\"3\" />\n              <button id=\"updateAttacks\">Update</button>\n            </li>\n            <li>\n              <b>Active Attacks:</b>\n              <ul id=\"activeAttacksList\"></ul>\n            </li>\n          </ul>\n        </div>\n        <div id=\"map\" />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}